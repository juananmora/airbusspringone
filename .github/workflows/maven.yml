# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package -Denforcer.fail=false --file pom.xml
    - name: Build & Publish Image
      run: echo Build Image   

  deploydev:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Development
        run: echo app deployed en dev

  jenkins:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo content
        uses: actions/checkout@v2 # checkout the repository content

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # install the python version needed

      - name: install python packages
        run: |
          pip install --upgrade pip
          pip install requests

      - name: execute py script # run main.py
        run:  python jenkins_job2.py "http://gitea.gitea/devsecops/functional-test.git" "preproduccion" "devsecops" ${{ secrets.JENKINS_TOKEN }} "main"
  deploypre:
    needs: jenkins
    runs-on: ubuntu-latest
    steps:
      - name: Deploy PRE
        run: echo app deployed en PRE

  deploypro:
    needs: deploypre
    runs-on: ubuntu-latest
    steps:
      - name: Deploy PRO
        run: echo app deployed en PRO


